stages:


  #########################################
  ######## PHYSICS WORKFLOW STAGES ########
  #########################################

  - name: configurate
    dependencies: [init]
    scheduler:
      scheduler_type: singlestep-stage
      parameters:
        input_file: {step: init, output: inputfile}
      step: {$ref: 'workflows/yadage/steps.yml#/configurate'}

  - name: generate
    dependencies: [configurate]
    scheduler:
      scheduler_type: singlestep-stage
      parameters:
        input_file: {step: init, output: inputfile}
        config_file: {step: configurate, output: config_file}
        num_jobs: {step: init, output: njobs}
        signal_dir: 'code/mg_processes/signal'
      step: {$ref: 'workflows/yadage/steps.yml#/generate'}

  - name: mgpythia
    dependencies: [generate]
    scheduler:
      scheduler_type: multistep-stage
      parameters:
        events_folder: {step: generate, output: script_files}
        madgraph_dir: 'software/MG5_aMC_v2_6_7'
        signal_dir: 'code/mg_processes/signal'
        logs_dir: 'code/logs'
      scatter:
        method: zip
        parameters: [eventfolder]
      step: {$ref: 'workflows/yadage/steps.yml#/mg_pythia'}

  - name: delphes
    dependencies: [mgpythia]
    scheduler:
      scheduler_type: multistep-stage
      parameters:
        config_file: {step: configurate, output: config_file}
        input_file: {step: init, output: inputfile}
        event_file: {step: mgpythia, output: postrun_file}
      step: {$ref: 'workflows/yadage/steps.yml#/delphes'}
      scatter:
        method: zip
        parameters: [eventfile]

  - name: combine
    dependencies: [delphes]
    scheduler:
      scheduler_type: singlestep-stage
      parameters:
        input_files: {step: delphes, output: dpostrun_file}
      step: {$ref: 'workflows/yadage/steps.yml#/combine'}


  ########################################
  ########## ML WORKFLOW STAGES ##########
  ########################################

  - name: sampling
    dependencies: [combine]
    scheduler:
      scheduler_type: singlestep-stage
      parameters:
        num_train_samples: {step: init, output: ntrainsamples}
        input_file: {step: init, output: inputfile}
        data_file: {step: combine, output: data_file}
      step: {$ref: 'workflows/yadage/steps.yml#/sampling'}

  - name: training
    dependencies: [sampling]
    scheduler:
      scheduler_type: multistep-stage
      parameters:
        input_file: {step: init, output: inputfile}
        train_folder: {step: sampling, output: sampling_file}
      scatter:
        method: zip
        parameters: [trainfolder]
      step: {$ref: 'workflows/yadage/steps.yml#/training'}

  - name: evaluating
    dependencies: [training]
    scheduler:
      scheduler_type: multistep-stage
      parameters:
        input_file: {step: init, output: inputfile}
        model_file: {step: training, output: trained_file}
        data_file: {step: combine, output: data_file}
      scatter:
        method: zip
        parameters: [trained_file]
      step: {$ref: 'workflows/yadage/steps.yml#/evaluating'}

  - name: plotting
    dependencies: [evaluating]
    scheduler:
      scheduler_type: singlestep-stage
      parameters:
        input_file: {step: init, output: inputfile}
        # The following line is wrong.
        # How to get output ZIPs from a 'interpolated-pub' publisher_type step?
        #
        # result_files: {step: evaluating, output: ??????}
        #
        output_file: 'output.txt'
      step: {$ref: 'workflows/yadage/steps.yml#/plotting'}
